# app.py - VERSI√ìN M√çNIMA PARA DIAGN√ìSTICO

import streamlit as st
import sys
import os

# A√±adir el directorio actual al path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

st.title("ü©∫ Prueba de Dependencias - Diabetes Prediction")
st.markdown("---")

# Probar importaciones b√°sicas
st.header("1. Probando importaciones b√°sicas")

try:
    import pandas as pd
    st.success("‚úÖ pandas importado correctamente")
    st.write(f"Versi√≥n pandas: {pd.__version__}")
except ImportError as e:
    st.error(f"‚ùå Error importando pandas: {e}")

try:
    import numpy as np
    st.success("‚úÖ numpy importado correctamente")
    st.write(f"Versi√≥n numpy: {np.__version__}")
except ImportError as e:
    st.error(f"‚ùå Error importando numpy: {e}")

try:
    import joblib
    st.success("‚úÖ joblib importado correctamente")
    st.write(f"Versi√≥n joblib: {joblib.__version__}")
except ImportError as e:
    st.error(f"‚ùå Error importando joblib: {e}")

# Probar importaciones de ML
st.header("2. Probando importaciones de ML")

try:
    from sklearn.ensemble import RandomForestClassifier
    st.success("‚úÖ scikit-learn importado correctamente")
except ImportError as e:
    st.error(f"‚ùå Error importando scikit-learn: {e}")

try:
    import xgboost as xgb
    st.success("‚úÖ xgboost importado correctamente")
except ImportError as e:
    st.error(f"‚ùå Error importando xgboost: {e}")

# Probar nuestras propias importaciones
st.header("3. Probando importaciones personalizadas")

try:
    # Intentar importar config
    from config import TARGET_NAME, FEATURE_NAMES
    st.success("‚úÖ config.py importado correctamente")
    st.write(f"Target: {TARGET_NAME}")
    st.write(f"Features: {FEATURE_NAMES}")
except Exception as e:
    st.error(f"‚ùå Error importando config: {e}")

try:
    # Intentar importar helpers
    from utils.helpers import get_risk_recommendations
    st.success("‚úÖ helpers.py importado correctamente")
    
    # Probar funci√≥n
    risk_info = get_risk_recommendations(0.5)
    st.write(f"Recomendaci√≥n de prueba: {risk_info['level']}")
except Exception as e:
    st.error(f"‚ùå Error importando helpers: {e}")

# Informaci√≥n del sistema
st.header("4. Informaci√≥n del sistema")

st.write(f"Directorio de trabajo: {os.getcwd()}")
st.write(f"Archivos en directorio: {os.listdir('.')}")

if os.path.exists('requirements.txt'):
    with open('requirements.txt', 'r') as f:
        requirements = f.read()
    st.text_area("Contenido de requirements.txt:", requirements, height=200)
else:
    st.error("‚ùå requirements.txt no encontrado")

# Footer
st.markdown("---")
st.markdown("**App de diagn√≥stico - Si todas las importaciones son ‚úÖ, la app funciona**")
